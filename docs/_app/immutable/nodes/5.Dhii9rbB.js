import{s as v,n as $}from"../chunks/scheduler.BagewE2w.js";import{S as h,i as _,k as i,s as b,l as p,f as w,m as c,g as u,n as m,o as g,d,p as f,e as x,c as q,q as C}from"../chunks/index.CAlHETie.js";import{N as k}from"../chunks/NavigationBar.DbNga9r1.js";import{C as B}from"../chunks/ContentPage.DzlI6f4p.js";/* empty css                                                      */function L(r){let e,n=`<tr><td class="text svelte-1plqr11">The One Billion Row Challenge (1BRC) 
					<a href="https://x.com/gunnarmorling/status/1741839724933751238" data-tooltip="Annoucement on X" data-placement="top" target="_blank" class="svelte-1plqr11">ðŸ”—</a> <a href="https://www.morling.dev/blog/one-billion-row-challenge/" data-tooltip="1BRC detail page" data-placement="top" target="_blank" class="svelte-1plqr11">ðŸ”—</a>, 
				proposed by Gunnar Morling, 
				is a coding challenge designed to test the limits of <b class="svelte-1plqr11">Java</b>&#39;s performance capabilities. 
				Launched on <b class="svelte-1plqr11">January 1, 2024</b>, 
				the challenge invites participants to create the fastest Java program for processing 
				a text file containing <b class="svelte-1plqr11">one billion rows</b> of temperature measurements.</td> <td><a href="https://x.com/gunnarmorling/status/1741839724933751238" data-tooltip="Annoucement on X" data-placement="top" target="_blank" class="svelte-1plqr11"><img src="1brc-on-X.png" alt="1BRC" height="550px"/></a></td></tr>`;return{c(){e=x("table"),e.innerHTML=n},l(a){e=q(a,"TABLE",{"data-svelte-h":!0}),C(e)!=="svelte-11vkobh"&&(e.innerHTML=n)},m(a,s){u(a,e,s)},p:$,d(a){a&&d(e)}}}function R(r){let e,n,a,s;return e=new B({props:{title:"Overview",$$slots:{default:[L]},$$scope:{ctx:r}}}),a=new k({props:{prevLink:"/",nextLink:"/overview-2.html"}}),{c(){i(e.$$.fragment),n=b(),i(a.$$.fragment)},l(t){p(e.$$.fragment,t),n=w(t),p(a.$$.fragment,t)},m(t,o){c(e,t,o),u(t,n,o),c(a,t,o),s=!0},p(t,[o]){const l={};o&1&&(l.$$scope={dirty:o,ctx:t}),e.$set(l)},i(t){s||(m(e.$$.fragment,t),m(a.$$.fragment,t),s=!0)},o(t){g(e.$$.fragment,t),g(a.$$.fragment,t),s=!1},d(t){t&&d(n),f(e,t),f(a,t)}}}class X extends h{constructor(e){super(),_(this,e,null,R,v,{})}}export{X as component};
