import{s as v,n as h}from"../chunks/scheduler.BagewE2w.js";import{S as $,i as w,k as i,s as _,l as c,f as b,m as p,g as u,n as m,o as g,d,p as f,e as k,c as x,q as C,r as B}from"../chunks/index.DOboLNP_.js";import{N as L}from"../chunks/NavigationBar.DffzDlWM.js";import{C as y}from"../chunks/ContentPage.DuHz7mqJ.js";/* empty css                                                      */function J(o){let t,n=`<tr><td class="text svelte-w7ttr3"><p>The One Billion Row Challenge (1BRC) 
						<a href="https://x.com/gunnarmorling/status/1741839724933751238" data-tooltip="Annoucement on X" data-placement="top" target="_blank" class="svelte-w7ttr3">ðŸ”—</a> <a href="https://www.morling.dev/blog/one-billion-row-challenge/" data-tooltip="1BRC detail page" data-placement="top" target="_blank" class="svelte-w7ttr3">ðŸ”—</a>, 
					proposed by Gunnar Morling, 
					is a coding challenge designed to test the limits of <b class="svelte-w7ttr3">Java</b>&#39;s performance capabilities. 
					Launched on <b class="svelte-w7ttr3">January 1, 2024</b>, 
					the challenge invites participants to create the fastest Java program for processing 
					a text file containing <b class="svelte-w7ttr3">one billion rows</b> of temperature measurements.</p> <div class="drake svelte-w7ttr3"><img class="drake svelte-w7ttr3" src="drake-no.png" alt="Drake say &#39;NO&#39;."/>
					January 2024.</div></td> <td><a href="https://x.com/gunnarmorling/status/1741839724933751238" data-tooltip="Annoucement on X" data-placement="top" target="_blank" class="svelte-w7ttr3"><img src="1brc-on-X.png" alt="1BRC" height="550px"/></a></td></tr>`;return{c(){t=k("table"),t.innerHTML=n,this.h()},l(a){t=x(a,"TABLE",{class:!0,"data-svelte-h":!0}),C(t)!=="svelte-13dr70"&&(t.innerHTML=n),this.h()},h(){B(t,"class","main-table svelte-w7ttr3")},m(a,s){u(a,t,s)},p:h,d(a){a&&d(t)}}}function R(o){let t,n,a,s;return t=new y({props:{title:"Overview",$$slots:{default:[J]},$$scope:{ctx:o}}}),a=new L({props:{prevLink:"/",nextLink:"/overview-2.html"}}),{c(){i(t.$$.fragment),n=_(),i(a.$$.fragment)},l(e){c(t.$$.fragment,e),n=b(e),c(a.$$.fragment,e)},m(e,r){p(t,e,r),u(e,n,r),p(a,e,r),s=!0},p(e,[r]){const l={};r&1&&(l.$$scope={dirty:r,ctx:e}),t.$set(l)},i(e){s||(m(t.$$.fragment,e),m(a.$$.fragment,e),s=!0)},o(e){g(t.$$.fragment,e),g(a.$$.fragment,e),s=!1},d(e){e&&d(n),f(t,e),f(a,e)}}}class X extends ${constructor(t){super(),w(this,t,null,R,v,{})}}export{X as component};
