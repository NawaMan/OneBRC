import{s as I,n as J}from"../chunks/scheduler.DrAWG7n9.js";import{S as M,i as N,k as v,s as E,l as h,f as L,m as w,g as b,n as y,o as T,d as i,p as x,e as p,c,a as d,q as P,h as _}from"../chunks/index.4IndGMFV.js";import{N as S}from"../chunks/NavigationBar.D0Sy7MFT.js";import{C as Y}from"../chunks/ContentPage.DjKsg_0w.js";import{Y as G}from"../chunks/YouTube.CQ43Bmn9.js";function q(C){let t,r,a,s,e,o,l,u,m,B=`The One Billion Row Challenge (1BRC) <a href="https://www.morling.dev/blog/one-billion-row-challenge/" class="svelte-1mal820">ðŸ”—</a>, 
		  proposed by Gunnar Morling, 
		  is a coding challenge designed to test the limits of <b class="svelte-1mal820">Java</b>&#39;s performance capabilities. 
		Launched on <b class="svelte-1mal820">January 1, 2024</b>, 
		  the challenge invites participants to create the fastest Java program for processing 
		  a text file containing <b class="svelte-1mal820">one billion rows</b> of temperature measurements.`,$;return s=new G({props:{name:"1brc",youtubeId:"RYjB4sGXNZI"}}),l=new G({props:{name:"1brc-in-2seconds",youtubeId:"9-S_nZ5gzGE"}}),{c(){t=p("table"),r=p("tr"),a=p("td"),v(s.$$.fragment),e=E(),o=p("td"),v(l.$$.fragment),u=E(),m=p("p"),m.innerHTML=B},l(n){t=c(n,"TABLE",{});var f=d(t);r=c(f,"TR",{});var g=d(r);a=c(g,"TD",{});var R=d(a);h(s.$$.fragment,R),R.forEach(i),e=L(g),o=c(g,"TD",{});var k=d(o);h(l.$$.fragment,k),k.forEach(i),g.forEach(i),f.forEach(i),u=L(n),m=c(n,"P",{"data-svelte-h":!0}),P(m)!=="svelte-1s3su6m"&&(m.innerHTML=B)},m(n,f){b(n,t,f),_(t,r),_(r,a),w(s,a,null),_(r,e),_(r,o),w(l,o,null),b(n,u,f),b(n,m,f),$=!0},p:J,i(n){$||(y(s.$$.fragment,n),y(l.$$.fragment,n),$=!0)},o(n){T(s.$$.fragment,n),T(l.$$.fragment,n),$=!1},d(n){n&&(i(t),i(u),i(m)),x(s),x(l)}}}function D(C){let t,r,a,s;return t=new Y({props:{title:"Overview",$$slots:{default:[q]},$$scope:{ctx:C}}}),a=new S({props:{prevLink:"/",nextLink:"/result.html"}}),{c(){v(t.$$.fragment),r=E(),v(a.$$.fragment)},l(e){h(t.$$.fragment,e),r=L(e),h(a.$$.fragment,e)},m(e,o){w(t,e,o),b(e,r,o),w(a,e,o),s=!0},p(e,[o]){const l={};o&1&&(l.$$scope={dirty:o,ctx:e}),t.$set(l)},i(e){s||(y(t.$$.fragment,e),y(a.$$.fragment,e),s=!0)},o(e){T(t.$$.fragment,e),T(a.$$.fragment,e),s=!1},d(e){e&&i(r),x(t,e),x(a,e)}}}class A extends M{constructor(t){super(),N(this,t,null,D,I,{})}}export{A as component};
