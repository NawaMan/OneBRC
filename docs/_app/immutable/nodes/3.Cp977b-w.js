import{s as I,d as A,u as R,g as z,e as O,n as U}from"../chunks/scheduler.Bm1vu1fr.js";import{S as q,i as x,e as m,t as B,s as $,c as _,a as b,b as M,d as o,f as w,m as h,g,h as f,j as N,o as C,p as E,k as V,l as D,n as H,q as L,v as P}from"../chunks/index.XvGQ8ST3.js";import{N as j}from"../chunks/NavigationBar.Cfpc3nGd.js";function F(d){let e,r,l,a,t,s,n,v,u;const y=d[3].default,p=A(y,d,d[2],null);return{c(){e=m("div"),r=m("h1"),l=B(d[0]),a=$(),t=m("span"),s=B(d[1]),n=$(),v=m("div"),p&&p.c(),this.h()},l(i){e=_(i,"DIV",{class:!0});var c=b(e);r=_(c,"H1",{class:!0});var S=b(r);l=M(S,d[0]),S.forEach(o),a=w(c),t=_(c,"SPAN",{class:!0});var T=b(t);s=M(T,d[1]),T.forEach(o),n=w(c),v=_(c,"DIV",{class:!0});var k=b(v);p&&p.l(k),k.forEach(o),c.forEach(o),this.h()},h(){h(r,"class","svelte-pixnya"),h(t,"class","subtitle svelte-pixnya"),h(v,"class","content svelte-pixnya"),h(e,"class","page svelte-pixnya")},m(i,c){g(i,e,c),f(e,r),f(r,l),f(e,a),f(e,t),f(t,s),f(e,n),f(e,v),p&&p.m(v,null),u=!0},p(i,[c]){(!u||c&1)&&N(l,i[0]),(!u||c&2)&&N(s,i[1]),p&&p.p&&(!u||c&4)&&R(p,y,i,i[2],u?O(y,i[2],c,null):z(i[2]),null)},i(i){u||(C(p,i),u=!0)},o(i){E(p,i),u=!1},d(i){i&&o(e),p&&p.d(i)}}}function G(d,e,r){let{$$slots:l={},$$scope:a}=e,{title:t=""}=e,{subtitle:s=""}=e;return d.$$set=n=>{"title"in n&&r(0,t=n.title),"subtitle"in n&&r(1,s=n.subtitle),"$$scope"in n&&r(2,a=n.$$scope)},[t,s,a,l]}class Y extends q{constructor(e){super(),x(this,e,G,F,I,{title:0,subtitle:1})}}function J(d){let e,r=`<ul class="svelte-p5epdr"><li>Read a CSV file with 1 billion rows</li> <li>Each line weather station name and temperature
			<ul class="svelte-p5epdr"><li>Each row is delimetered by a new line &#39;\\n&#39;</li> <li>Station name and temperature is seprated by &#39;;&#39;</li> <li>Each station name is UTF-8 (100 bytes or shorter)</li> <li>The temperature is between -99.9 to 99.9 <br/>(1-2 digit before decinal and 1 digit after decinal)</li></ul></li> <li>Calculate min, max and average temperatures <br/>for each station.</li> <li>Print the results</li> <li>No external dependency</li> <li>Source code in one file</li> <li>Benchmark on 32 cores CPU and 128 GB RAM</li></ul>`,l,a,t='<table class="svelte-p5epdr"><tr><td class="svelte-p5epdr">1</td><td class="svelte-p5epdr">Ottawa;14.2</td></tr> <tr><td class="svelte-p5epdr">2</td><td class="svelte-p5epdr">Bangkok;35.0</td></tr> <tr><td class="svelte-p5epdr">3</td><td class="svelte-p5epdr">Sydney;2.5</td></tr> <tr><td class="svelte-p5epdr">4</td><td class="svelte-p5epdr">New Delhi;-0.2</td></tr> <tr><td class="svelte-p5epdr">5</td><td class="svelte-p5epdr">Abéché;89.3</td></tr> <tr class="blur svelte-p5epdr"><td class="svelte-p5epdr">455</td><td class="svelte-p5epdr">New York;20.7</td></tr> <tr class="blur svelte-p5epdr"><td class="svelte-p5epdr">15,466</td><td class="svelte-p5epdr">Mars;-24.7</td></tr> <tr class="blur svelte-p5epdr"><td class="svelte-p5epdr">1,546,536</td><td class="svelte-p5epdr">Venus;84.5</td></tr> <tr><td class="svelte-p5epdr">1,000,000,000</td><td class="svelte-p5epdr">Budapest;14.9</td></tr></table>';return{c(){e=m("div"),e.innerHTML=r,l=$(),a=m("div"),a.innerHTML=t,this.h()},l(s){e=_(s,"DIV",{class:!0,"data-svelte-h":!0}),P(e)!=="svelte-qz9p41"&&(e.innerHTML=r),l=w(s),a=_(s,"DIV",{class:!0,"data-svelte-h":!0}),P(a)!=="svelte-1aawez1"&&(a.innerHTML=t),this.h()},h(){h(e,"class","left svelte-p5epdr"),h(a,"class","right svelte-p5epdr")},m(s,n){g(s,e,n),g(s,l,n),g(s,a,n)},p:U,d(s){s&&(o(e),o(l),o(a))}}}function K(d){let e,r,l,a;return e=new j({props:{prevLink:"/"}}),l=new Y({props:{title:"One Billion Row Challenge",subtitle:"The Challenge",$$slots:{default:[J]},$$scope:{ctx:d}}}),{c(){V(e.$$.fragment),r=$(),V(l.$$.fragment)},l(t){D(e.$$.fragment,t),r=w(t),D(l.$$.fragment,t)},m(t,s){H(e,t,s),g(t,r,s),H(l,t,s),a=!0},p(t,[s]){const n={};s&1&&(n.$$scope={dirty:s,ctx:t}),l.$set(n)},i(t){a||(C(e.$$.fragment,t),C(l.$$.fragment,t),a=!0)},o(t){E(e.$$.fragment,t),E(l.$$.fragment,t),a=!1},d(t){t&&o(r),L(e,t),L(l,t)}}}class Z extends q{constructor(e){super(),x(this,e,null,K,I,{})}}export{Z as component};
