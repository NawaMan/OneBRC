import{s as _,n as w}from"../chunks/scheduler.DvCM5tHg.js";import{S as C,i as k,k as v,s as $,l as d,f as h,m as x,g as n,n as m,o as y,d as i,p as b,e as u,c as f,q as p,r as g}from"../chunks/index.DvlnuOep.js";import{N as B}from"../chunks/NavigationBar.0fE2o1XS.js";import{C as M}from"../chunks/ContentPage.BWcYxq9R.js";function S(c){let s,r='<ul class="svelte-1txroys"><li>Read a <b class="svelte-1txroys">text file</b> containing <b class="svelte-1txroys">1 billion rows</b> of measurements.</li> <li>Each line contains a weather <b class="svelte-1txroys">station name</b> and <b class="svelte-1txroys">temperature</b>:\n				<ul class="svelte-1txroys"><li>Rows are delimited by a newline character (<b class="svelte-1txroys">&#39;\\n&#39;</b>).</li> <li>Station name and temperature are separated by a semicolon.</li> <li>Station name is encoded in <b class="svelte-1txroys">UTF-8</b> and is <b class="svelte-1txroys">100 bytes</b> or shorter.</li> <li>The temperature ranges from -99.9 to 99.9 (<b class="svelte-1txroys">1-2 digits before</b> the decimal point and <b class="svelte-1txroys">1 digit after</b>).</li></ul></li> <li>Calculate the <b class="svelte-1txroys">minimum</b>, <b class="svelte-1txroys">maximum</b>, and <b class="svelte-1txroys">average</b> temperatures for <b class="svelte-1txroys">each station</b>.</li> <li>Print the results in the format of Java <b class="svelte-1txroys">sorted-map `toString()`</b>.</li> <li><b class="svelte-1txroys">No external dependencies</b>.</li> <li>All source code should be in a <b class="svelte-1txroys">single file</b>.</li> <li>Benchmark on a <b class="svelte-1txroys">32-core CPU</b> with <b class="svelte-1txroys">128 GB RAM</b>.</li></ul>',a,l,t='<table class="svelte-1txroys"><tr class="svelte-1txroys"><td colspan="2" style="text-align: left;" class="svelte-1txroys">&gt; measurements.txt</td></tr> <tr class="svelte-1txroys"><td class="svelte-1txroys">1</td><td class="svelte-1txroys">Ottawa;14.2</td></tr> <tr class="svelte-1txroys"><td class="svelte-1txroys">2</td><td class="svelte-1txroys">Bangkok;44.0</td></tr> <tr class="svelte-1txroys"><td class="svelte-1txroys">3</td><td class="svelte-1txroys">Sydney;-2.5</td></tr> <tr class="svelte-1txroys"><td class="svelte-1txroys">4</td><td class="svelte-1txroys">Łódź;-20.4</td></tr> <tr class="blur svelte-1txroys"><td class="svelte-1txroys">455</td><td class="svelte-1txroys">New York;20.7</td></tr> <tr class="blur svelte-1txroys"><td class="svelte-1txroys">15,466</td><td class="svelte-1txroys">Mars;-24.7</td></tr> <tr class="blur svelte-1txroys"><td class="svelte-1txroys">1,546,536</td><td class="svelte-1txroys">Venus;84.5</td></tr> <tr class="svelte-1txroys"><td class="svelte-1txroys">1,000,000,000</td><td class="svelte-1txroys">Budapest;14.9</td></tr></table>';return{c(){s=u("div"),s.innerHTML=r,a=$(),l=u("div"),l.innerHTML=t,this.h()},l(e){s=f(e,"DIV",{class:!0,"data-svelte-h":!0}),p(s)!=="svelte-1x3jcnu"&&(s.innerHTML=r),a=h(e),l=f(e,"DIV",{class:!0,"data-svelte-h":!0}),p(l)!=="svelte-1h2yii"&&(l.innerHTML=t),this.h()},h(){g(s,"class","left svelte-1txroys"),g(l,"class","right svelte-1txroys")},m(e,o){n(e,s,o),n(e,a,o),n(e,l,o)},p:w,d(e){e&&(i(s),i(a),i(l))}}}function T(c){let s,r,a,l;return s=new M({props:{title:"One Billion Row Challenge",$$slots:{default:[S]},$$scope:{ctx:c}}}),a=new B({props:{prevLink:"/overview.html"}}),{c(){v(s.$$.fragment),r=$(),v(a.$$.fragment)},l(t){d(s.$$.fragment,t),r=h(t),d(a.$$.fragment,t)},m(t,e){x(s,t,e),n(t,r,e),x(a,t,e),l=!0},p(t,[e]){const o={};e&1&&(o.$$scope={dirty:e,ctx:t}),s.$set(o)},i(t){l||(m(s.$$.fragment,t),m(a.$$.fragment,t),l=!0)},o(t){y(s.$$.fragment,t),y(a.$$.fragment,t),l=!1},d(t){t&&i(r),b(s,t),b(a,t)}}}class R extends C{constructor(s){super(),k(this,s,null,T,_,{})}}export{R as component};
